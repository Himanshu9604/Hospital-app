import React, { useEffect, useState } from "react";
import CurrencyRupeeIcon from "@mui/icons-material/CurrencyRupee";
import TodayIcon from "@mui/icons-material/Today";
import CalendarMonthIcon from "@mui/icons-material/CalendarMonth";
import EventIcon from "@mui/icons-material/Event";
import { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField } from "@mui/material";
import "./Revenue.css";

function Revenue() {
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [isPasswordPopupOpen, setIsPasswordPopupOpen] = useState(true);
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");

  const [todayRevenue, setTodayRevenue] = useState(0);
  const [monthlyRevenue, setMonthlyRevenue] = useState(0);
  const [yearlyRevenue, setYearlyRevenue] = useState(0);

  useEffect(() => {
    if (isAuthenticated) {
      const patients = JSON.parse(localStorage.getItem("patients")) || [];
  
      const today = new Date();
      const todayStr = today.toISOString().split("T")[0];
      const currentMonth = today.getMonth() + 1;
      const currentYear = today.getFullYear();
  
      let todayTotal = 0;
      let monthTotal = 0;
      let yearTotal = 0;
  
      patients.forEach((patient) => {
        const { date, fee, additionalFee } = patient;
  
        // Ensure fee and additionalFee are numbers before adding them
        const totalFee = parseFloat(fee || 0) + parseFloat(additionalFee || 0);
  
        if (date === todayStr) {
          todayTotal += totalFee;
        }
  
        const [year, month] = date.split("-").map(Number);
  
        if (year === currentYear) {
          yearTotal += totalFee;
          if (month === currentMonth) {
            monthTotal += totalFee;
          }
        }
      });
  
      setTodayRevenue(todayTotal);
      setMonthlyRevenue(monthTotal);
      setYearlyRevenue(yearTotal);
    }
  }, [isAuthenticated]);
  

  const handlePasswordSubmit = () => {
    if (password === "Amit") {
      setIsAuthenticated(true);
      setIsPasswordPopupOpen(false);
      setError("");
    } else {
      setError("Incorrect password. Please try again.");
    }
  };

  return (
    <div className="revenue-container">
     <Dialog
  open={isPasswordPopupOpen}
  onClose={() => setIsPasswordPopupOpen(false)}
  fullWidth
  maxWidth="sm" // Adjust width for a larger popup
>
  <DialogTitle className="dialog-title">Enter Password</DialogTitle>
  <DialogContent className="dialog-content">
    <p>Please enter the password to access revenue details.</p>
    <TextField
      type="password"
      label="Password"
      variant="outlined"
      className="dialog-input"
      fullWidth
      value={password}
      onChange={(e) => setPassword(e.target.value)}
      error={!!error}
      helperText={error}
    />
  </DialogContent>
  <DialogActions className="dialog-actions">
    <Button
      onClick={() => setIsPasswordPopupOpen(false)}
      color="secondary"
      className="dialog-button"
    >
      Cancel
    </Button>
    <Button
      onClick={handlePasswordSubmit}
      variant="contained"
      color="primary"
      className="dialog-button"
    >
      Submit
    </Button>
  </DialogActions>
</Dialog>


      {isAuthenticated && (
        <>
          <h2>Total Revenue</h2>
          <p>Total revenue generated by the hospital.</p>
          <div className="cards">
            <div className="card">
              <TodayIcon className="card-icon today-icon" />
              <h3>Today</h3>
              <p>
                <CurrencyRupeeIcon className="currency-icon" />
                {todayRevenue.toLocaleString("en-IN")}
              </p>
            </div>
            <div className="card">
              <CalendarMonthIcon className="card-icon month-icon" />
              <h3>This Month</h3>
              <p>
                <CurrencyRupeeIcon className="currency-icon" />
                {monthlyRevenue.toLocaleString("en-IN")}
              </p>
            </div>
            <div className="card">
              <EventIcon className="card-icon year-icon" />
              <h3>This Year</h3>
              <p>
                <CurrencyRupeeIcon className="currency-icon" />
                {yearlyRevenue.toLocaleString("en-IN")}
              </p>
            </div>
          </div>
        </>
      )}
    </div>
  );
}

export default Revenue;
